<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Container;
use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException;
use Symfony\Component\DependencyInjection\Exception\LogicException;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;
use Symfony\Component\DependencyInjection\ParameterBag\FrozenParameterBag;
use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class YsGroupsCacheContainer extends Container
{
    protected $parameters = [];

    public function __construct()
    {
        $this->services = $this->privates = [];
        $this->methodMap = [
            'YsGroups\\Controller\\Admin\\Admin' => 'getAdminService',
            'YsGroups\\Controller\\Front\\Front' => 'getFrontService',
            'YsGroups\\RewriteRules' => 'getRewriteRulesService',
            'YsGroups\\Session' => 'getSessionService',
        ];

        $this->aliases = [];
    }

    public function compile(): void
    {
        throw new LogicException('You cannot compile a dumped container that was already compiled.');
    }

    public function isCompiled(): bool
    {
        return true;
    }

    public function getRemovedIds(): array
    {
        return [
            'YsGroups\\Container' => true,
            'YsGroups\\Controller\\Admin\\AdminGroups' => true,
            'YsGroups\\Controller\\Admin\\GroupListTable' => true,
            'YsGroups\\Controller\\Admin\\MetaBox' => true,
            'YsGroups\\Controller\\Front\\GroupsController' => true,
            'YsGroups\\Helpers\\Helpers' => true,
            'YsGroups\\Model\\Db' => true,
            'YsGroups\\Model\\DbSchema' => true,
            'YsGroups\\Model\\Groups' => true,
            'YsGroups\\Model\\GroupsMembers' => true,
            'YsGroups\\Model\\PluginPosts' => true,
            'YsGroups\\OnPluginActivation' => true,
            'YsGroups\\YsGroups' => true,
        ];
    }

    /**
     * Gets the public 'YsGroups\Controller\Admin\Admin' shared autowired service.
     *
     * @return \YsGroups\Controller\Admin\Admin
     */
    protected function getAdminService()
    {
        return $this->services['YsGroups\\Controller\\Admin\\Admin'] = new \YsGroups\Controller\Admin\Admin(
            new \YsGroups\Controller\Admin\AdminGroups()
        );
    }

    /**
     * Gets the public 'YsGroups\Controller\Front\Front' shared autowired service.
     *
     * @return \YsGroups\Controller\Front\Front
     */
    protected function getFrontService()
    {
        return $this->services['YsGroups\\Controller\\Front\\Front'] = new \YsGroups\Controller\Front\Front(
            new \YsGroups\Controller\Front\GroupsController()
        );
    }

    /**
     * Gets the public 'YsGroups\RewriteRules' shared autowired service.
     *
     * @return \YsGroups\RewriteRules
     */
    protected function getRewriteRulesService()
    {
        return $this->services['YsGroups\\RewriteRules'] = new \YsGroups\RewriteRules();
    }

    /**
     * Gets the public 'YsGroups\Session' shared autowired service.
     *
     * @return \YsGroups\Session
     */
    protected function getSessionService()
    {
        return $this->services['YsGroups\\Session'] = new \YsGroups\Session();
    }
}
